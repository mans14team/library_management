option_settings:
  aws:elasticbeanstalk:application:environment:
    REDIS_PASSWORD: "${REDIS_PASSWORD}"
    REDIS_SENTINEL_NODES: "${REDIS_SENTINEL_NODES}"
    DB_HOST: "${DB_HOST}"
    DB_USERNAME: "${DB_USERNAME}"
    DB_PASSWORD: "${DB_PASSWORD}"
    JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
    OWNER_TOKEN: "${OWNER_TOKEN}"
    TOSS_SECRET_KEY: "${TOSS_SECRET_KEY}"
    TOSS_CLIENT_KEY: "${TOSS_CLIENT_KEY}"
    TOSS_SUCCESS_URL: "${TOSS_SUCCESS_URL}"
    TOSS_FAIL_URL: "${TOSS_FAIL_URL}"
    TOSS_BASE_URL: "${TOSS_BASE_URL}"
    SPRING_PROFILES_ACTIVE: "prod"

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_set_env.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # 환경 변수 파일 경로
      ENV_FILE="/opt/elasticbeanstalk/deployment/env"

      # 기존 파일이 있으면 백업
      if [ -f "$ENV_FILE" ]; then
        mv "$ENV_FILE" "${ENV_FILE}.bak"
      fi

      # 새 환경 변수 파일 생성
      touch "$ENV_FILE"
      chmod 600 "$ENV_FILE"

      # 필수 환경 변수 설정
      declare -A env_vars=(
        ["SPRING_PROFILES_ACTIVE"]="prod"
        ["SERVER_PORT"]="8080"
      )

      # 환경 변수 파일에 추가
      for key in "${!env_vars[@]}"; do
        echo "export ${key}=${env_vars[$key]}" >> "$ENV_FILE"
      done

      # 권한 설정
      chmod 600 "$ENV_FILE"

      # 환경 변수 로드
      source "$ENV_FILE"

container_commands:
  01_verify_env:
    command: |
      #!/bin/bash
      echo "Verifying environment settings..."

      # Docker 상태 확인
      echo "Checking Docker status..."
      if ! docker info > /dev/null 2>&1; then
        echo "Docker is not running properly"
        exit 1
      fi

      # Redis Sentinel 노드 확인
      if [ ! -z "$REDIS_SENTINEL_NODES" ]; then
        echo "Testing Redis connection..."
        REDIS_HOST=$(echo $REDIS_SENTINEL_NODES | cut -d',' -f1 | cut -d':' -f1)
        REDIS_PORT=$(echo $REDIS_SENTINEL_NODES | cut -d',' -f1 | cut -d':' -f2)

        # Timeout 설정과 함께 연결 테스트
        timeout 5 bash -c "</dev/tcp/$REDIS_HOST/$REDIS_PORT" > /dev/null 2>&1
        if [ $? -ne 0 ]; then
          echo "Warning: Could not connect to Redis at $REDIS_HOST:$REDIS_PORT"
        else
          echo "Redis connection successful"
        fi
      fi

      # DB 연결 확인
      if [ ! -z "$DB_HOST" ]; then
        echo "Testing database connection..."
        timeout 5 bash -c "</dev/tcp/$DB_HOST/3306" > /dev/null 2>&1
        if [ $? -ne 0 ]; then
          echo "Warning: Could not connect to database at $DB_HOST:3306"
        else
          echo "Database connection successful"
        fi
      fi

      # 환경 변수 검증 (값 노출 없이)
      echo "Verifying environment variables..."
      required_vars=(
        "REDIS_PASSWORD"
        "REDIS_SENTINEL_NODES"
        "DB_HOST"
        "DB_USERNAME"
        "DB_PASSWORD"
        "JWT_SECRET_KEY"
        "SPRING_PROFILES_ACTIVE"
      )

      missing_vars=0
      for var in "${required_vars[@]}"; do
        if [ -z "${!var}" ]; then
          echo "Warning: $var is not set"
          missing_vars=$((missing_vars + 1))
        else
          echo "$var is set"
        fi
      done

      # 경고만 출력하고 계속 진행
      if [ $missing_vars -gt 0 ]; then
        echo "Warning: $missing_vars environment variables are not set"
      fi

      # 로그 디렉토리 생성
      mkdir -p /var/log/eb-docker/containers/app
      chmod -R 777 /var/log/eb-docker/containers/app

      exit 0

  02_docker_start:
    command: |
      #!/bin/bash
      echo "Starting Docker container..."
      docker ps -a