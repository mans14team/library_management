files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/90_debug.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      exec 1>/var/log/eb-debug.log 2>&1
      set -x

      echo "=== System Info ==="
      uname -a
      free -m
      df -h

      echo "=== Docker Info ==="
      docker info
      docker ps -a
      docker images

      echo "=== Network Info ==="
      netstat -tulpn
      ss -tulpn

      echo "=== Environment Variables ==="
      printenv

      echo "=== Docker Logs ==="
      for container_id in $(docker ps -aq); do
        echo "=== Logs for container $container_id ==="
        docker logs $container_id 2>&1
      done

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/91_check_resources.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # 디스크 공간 체크
      DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
      if [ "$DISK_USAGE" -gt 85 ]; then
        echo "Warning: High disk usage: ${DISK_USAGE}%"
        docker system prune -af --volumes
      fi

      # 메모리 체크
      FREE_MEM=$(free | grep Mem | awk '{print $4}')
      if [ "$FREE_MEM" -lt 524288 ]; then
        echo "Warning: Low memory available: ${FREE_MEM}KB"
        sync; echo 3 > /proc/sys/vm/drop_caches
      fi

container_commands:
  01_verify_docker:
    command: |
      # Docker 데몬 상태 확인
      if ! systemctl is-active --quiet docker; then
        systemctl restart docker
        sleep 10
      fi

      # 이전 컨테이너 정리
      docker ps -aq | xargs -r docker rm -f
      docker system prune -af

  02_verify_networking:
    command: |
      # 포트 사용 확인
      if netstat -tulpn | grep -q ':8080'; then
        fuser -k 8080/tcp || true
      fi

  03_verify_permissions:
    command: |
      # 로그 디렉토리 권한 설정
      mkdir -p /var/log/eb-docker/containers/app
      chmod -R 777 /var/log/eb-docker/containers/app