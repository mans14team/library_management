version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_started
    restart: always
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD-SHELL", "apk add --no-cache curl && curl -f http://localhost/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    image: ${DOCKER_USERNAME}/spring-app:${IMAGE_TAG}
    container_name: spring-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OWNER_TOKEN=${OWNER_TOKEN}
      - TOSS_SECRET_KEY=${TOSS_SECRET_KEY}
      - TOSS_CLIENT_KEY=${TOSS_CLIENT_KEY}
      - TOSS_SUCCESS_URL=${TOSS_SUCCESS_URL}
      - TOSS_FAIL_URL=${TOSS_FAIL_URL}
      - TOSS_BASE_URL=${TOSS_BASE_URL}
      - USER_NAME=${USER_NAME}
      - USER_PASSWORD=${USER_PASSWORD}
    restart: always
    networks:
      - app-network
    healthcheck: # 헬스체크 추가
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s    # 애플리케이션 시작 대기 시간

networks:
  app-network:
    name: app-network
    driver: bridge