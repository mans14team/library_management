server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true


spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://${DB_HOST}/library_management
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: false
      timeout: 30000
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    ssl:
      enabled: false
  elasticsearch:
    rest:
      uris: http://localhost:9200
      connection-timeout: 5000
      socket-timeout: 3000
      max-retries: 3
      retry-on-conflict: 3
    bulk:
      batch-size: 1000
      concurrent-requests: 2
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 100

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URL}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: kakao
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

logging:
  file:
    name: logs/library-management.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.example.library_management: DEBUG
    org.elasticsearch: INFO
    org.springframework.data.elasticsearch: DEBUG
    org.elasticsearch.client.RestClient: INFO
    org.springframework.data.elasticsearch.client.WIRE: TRACE

jwt:
  secret.key: ${JWT_SECRET_KEY}

owner:
  token: ${OWNER_TOKEN}

payment:
  retry:
    max-attempts: 3
    delay: 1000  # 1ì´ˆ

toss:
  secret-key: ${TOSS_SECRET_KEY}
  client-key: ${TOSS_CLIENT_KEY}
  success-url: ${TOSS_SUCCESS_URL}
  fail-url: ${TOSS_FAIL_URL}
  api:
    base-url: ${TOSS_BASE_URL}

rabbitmq:
  queue:
    email: notification.email
  exchange:
    notification: notification.exchange
  routing:
    email: notification.email.routing


custom:
  active-months: 4,5,6,7
