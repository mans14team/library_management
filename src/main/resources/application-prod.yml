server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true


spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://${DB_HOST}/library_db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      sentinel:
        master: mymaster
        nodes: ${REDIS_SENTINEL_NODES}
      password: ${REDIS_PASSWORD}
      timeout: 4000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        use_sql_comments: false
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 100
    open-in-view: false

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.hibernate: INFO
    com.example.library_management: INFO

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: db,redis
        liveness:
          include: ping
  health:
    db:
      enabled: true
    redis:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  security:
    enabled: false

jwt:
  secret.key: ${JWT_SECRET_KEY}

owner:
  token: ${OWNER_TOKEN}

payment:
  retry:
    max-attempts: 3
    delay: 1000  # 1ì´ˆ

toss:
  secret-key: ${TOSS_SECRET_KEY}
  client-key: ${TOSS_CLIENT_KEY}
  success-url: ${TOSS_SUCCESS_URL}
  fail-url: ${TOSS_FAIL_URL}
  api:
    base-url: ${TOSS_BASE_URL}

custom:
  active-months: 4,5,6,7
